facet_grip(~ID) +
xlab("Responses to fillers")
ggplot(filler.data, aes(x=Response))+
geom_histogram(binwidth = 10) +
facet_grid(~ID) +
xlab("Responses to fillers")
ggplot(filler.data, aes(x=Response))+
geom_histogram(binwidth = 7) +
facet_grid(~ID) +
xlab("Responses to fillers")
ggplot(filler.data, aes(x=Response))+
#geom_histogram(binwidth = 7) +
facet_grid(~ID) +
xlab("Responses to fillers")
ggplot(data=filler.data, aes(x=Response)) + geom_histogram()
ggplot(data=filler.data, aes(x=Response)) +
geom_histogram() +
facet_grid(~ID)
ggplot(data=filler.data, aes(x=Response)) +
geom_histogram() +
facet_grid(~ID) +
xlab("Responses to fillers")
ggplot(data=filler.data, aes(x=Response)) +
geom_histogram() +
facet_grid(~ID) +
xlab("Responses to fillers")
ggsave(file="graphs/responses-to-fillers.pdf",width = 8, height = 4)
ggplot(data=filler.data, aes(x=Response)) +
geom_histogram() +
facet_grid(~ID) +
xlab("Responses to fillers")
ggsave(file="graphs/responses-to-fillers.pdf",width = 6, height = 2)
FillerWrongNo <- subset(filler.data, filler.data$prosody == "fillerNo" & filler.data$Response > 2)
FillerWrongNo = droplevels(FillerWrongNo)
table(FillerWrongNo$Response)
head(FillerWrongNo)
nrow(FillerWrongNo)#3 wrong responses
table(FillerWrongNo$workerid)
table(FillerWrongNo$Response,FillerWrongNo$ID)
length(unique(FillerWrongNo$workerid))
FillerWrongNo %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
wrong_n <- FillerWrongNo %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
wrong_n
wrong_n$no_rows
nrow(FillerWrongNo)
FillerWrongYes <- subset(filler.data, filler.data$prosody == "fillerYes" & filler.data$Response < 6)
FillerWrongYes = droplevels(FillerWrongYes)
table(FillerWrongYes$Response)
nrow(FillerWrongYes)
table(FillerWrongYes$Response,FillerWrongYes$workerid)
wrong_y <- FillerWrongYes %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
wrong_y
wrong_n
wrong_n
FillerWrongNo <- subset(filler.data, filler.data$prosody == "fillerNo" & filler.data$Response > 3)
FillerWrongNo = droplevels(FillerWrongNo)
table(FillerWrongNo$Response)
head(FillerWrongNo)
nrow(FillerWrongNo)
wrong_n <- FillerWrongNo %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
wrong_n
FillerWrongYes <- subset(filler.data, filler.data$prosody == "fillerYes" & filler.data$Response < 5)
FillerWrongYes = droplevels(FillerWrongYes)
table(FillerWrongYes$Response)
nrow(FillerWrongYes)
wrong_n <- FillerWrongNo %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
wrong_n
wrong_y <- FillerWrongYes %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
wrong_y
wrong_2 <- subset(wrong_n,wrong_n$no_rows > 1 | wrong_y$no_rows > 1)
wrong_n$now_rows
wrong_n <- FillerWrongNo %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
wrong_n
names(wrong_n)
table(wrong_n$now_rows)
wrong_n$no_rows
wrong_n$no_rows
str(wrong_n$no_rows)
wrong_n$no_rows <- as.numeric(wrong_n$no_rows)
wrong_n$no_rows > 1
wrong_y$no_rows <- as.numeric(wrong_y$no_rows)
wrong_2 <- subset(wrong_n,wrong_n$no_rows > 1 | wrong_y$no_rows > 1)
wrong_2 <- subset(wrong_n,(wrong_n$no_rows > 1 | wrong_y$no_rows > 1))
wrong_n$no_rows > 1
rbind(wrong,wrong_n,wrong_y)
wrong <- rbind(wrong_n,wrong_y)
wrong
wrong <- rbind(wrong_n,wrong_y)
wrong
wrong_2 <- subset(wrong,(wrong$no_rows > 1 | wrong$no_rows > 1))
wrong_2
table(wrong)
filler.wrong <- subset(filler.data, (filler.data$prosody == "fillerNo" & filler.data$Response > 3) | (filler.data$prosody == "fillerYes" & filler.data$Response < 5))
filler.wrong <- droplevels(filler.wrong)
nrow(filler.wrong)
wrong <- filler.wrong %>%
group_by(workerid) %>%
summarise(no_rows = length(workerid))
nrow(wrong)
wrong
table(wrong)
wrong_2 <- subset(wrong,wrong$no_rows > 1)
wrong_2
nrow(wrong_2)
filler.wrong <- subset(filler.data, (filler.data$prosody == "fillerNo" & filler.data$Response > 3) | (filler.data$prosody == "fillerYes" & filler.data$Response < 5))
filler.wrong <- droplevels(filler.wrong)
nrow(filler.wrong)
md <- subset(md, !md$workerid %in% wrong_2)
md <- droplevels(subset(md, !md$workerid %in% wrong_2))
nrow(md) #799 / 17 = 47
wrong_2 <- subset(wrong,wrong$no_rows > 1)
wrong_2
nrow(wrong_2)
table(wrong_2$workerid)
md <- droplevels(subset(md, !md$workerid %in% wrong_2$workerid))
nrow(md) # / 17 = 47
1040 / 16
table(md$List)
464 / 16
576 / 16
names(md)
# age
table(md$Answer.age)
md$Answer.age <- gsub("\"","",md$Answer.age)
md$Answer.age <- as.numeric(md$Answer.age)
median(md$Answer.age)
table(md$Answer.gender)
432 / 16
608 / 16
cd = md
save(cd,file="data/cd.RData")
theme_set(theme_bw())
setwd('/Users/judith/Documents/current-research-topics/NSF-NAI/prop-att-experiments/6-prosody-manner-advs/results/')
source('rscripts/helpers.R')
load("data/cd.RData")
nrow(cd) # 799 = 47 Turkers x 17 responses
names(cd)
head(cd)
foot# For plots
library(grid)
library(ggplot2)
# For ordinal logistic regression
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
library(ucminf)
library(ordinal)
library(languageR)
library(lme4)
#library(plyr)
library(dplyr)
#library(tidyr)
names(cd)
# target data
table(cd$ID)
table(cd$prosody)
table(cd$sentence)
names(cd)
table(cd$ID)
table(cd$prosody)
names(cd)
table(cd$utterance)
names(cd)
table(cd$question)
names(cd)
table(cd$prosody)
d = droplevels(subset(cd, prosody != "fillerNo" & prosody != "fillerYes"))
head(d)
nrow(d) # 705 / 15 = 47 Turkers
table(d$prosody)
ggplot(d, aes(x=as.factor(Response), fill=prosody)) +
geom_histogram(position="dodge") +
scale_x_discrete(name="Response") +
# for colored bars in talks
# scale_fill_discrete(name="",breaks=levels(d$Enough),labels=c("adj enough","adj")) +
# for grey scale bars in paper:
scale_fill_grey(name="",breaks=levels(d$prosody),labels=c("H* Pred","LH Compl")) +
theme(strip.text.x = element_blank(),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(.3,.75),
#panel.grid.major = element_blank(),
#panel.grid.minor = element_blank(),
panel.background = element_blank()
)
ggsave("graphs/histogram.pdf",height=3,width=4)
ggplot(d, aes(x=as.factor(Response), fill=prosody)) +
geom_histogram(position="dodge") +
scale_x_discrete(name="Response")
str(d$Response)
mean.by.utt <- d %>%
dplyr::select(utterance,Response,prosody) %>%
group_by(utterance,prosody) %>%
summarise(Mean = mean(Response))
mean.by.utt
head(mean.by.utt)
ggplot(mean.by.utt, aes(x=Mean,y=utterance,colour=prosody,fill=prosody)) +
geom_point() +
xlim(3,7) +
geom_text(aes(label=round(Mean,1)),hjust=0, vjust=0) +
geom_line()
ggsave("graphs/means-by-utterance.pdf",height=5,width=12)
mean.by.cond <- d %>%
dplyr::select(Response,prosody)
mean.sd <- aggregate(. ~ prosody, mean.by.cond, function(x) c(mean = mean(x), sd = sd(x)))
mean.sd
dplyr::select(utterance,Response,prosody) %>%
group_by(utterance,prosody) %>%
summarise(Mean = mean(Response))
mean.by.utt
head(mean.by.utt)
ggplot(mean.by.utt, aes(x=Mean,y=utterance,colour=prosody,fill=prosody)) +
geom_point() +
xlim(3,7) +
geom_text(aes(label=round(Mean,1)),hjust=0, vjust=0) +
geom_line()
ggsave("graphs/means-by-utterance.pdf",height=5,width=12)
ggplot(mean.by.utt, aes(x=Mean,y=utterance,colour=prosody,fill=prosody)) +
geom_point() +
xlim(3,7) +
geom_text(aes(label=round(Mean,1)),hjust=0, vjust=0) +
geom_line()
ggsave("graphs/means-by-target-utterance.pdf",height=5,width=12)
mean.by.cond <- cd %>%
dplyr::select(Response,prosody)
mean.sd <- aggregate(. ~ prosody, mean.by.cond, function(x) c(mean = mean(x), sd = sd(x)))
mean.sd
names(d)
d$Response <- as.numeric(d$Response)
agr = aggregate(Response ~ prosody, data=d, FUN="mean")
agr$CILow = aggregate(Response ~ prosody, data=d, FUN="ci.low")$Response
agr$CIHigh = aggregate(Response ~ prosody, data=d, FUN="ci.high")$Response
agr$YMin = agr$Response - agr$CILow
agr$YMax = agr$Response + agr$CIHigh
dodge = position_dodge(.9)
#agr$Choice = factor(x=agr$AIness,levels=c("SAI","VPAI"))
agr
names(cd)
cd$Response <- as.numeric(cd$Response)
agr = aggregate(Response ~ prosody, data=cd, FUN="mean")
agr$CILow = aggregate(Response ~ prosody, data=cd, FUN="ci.low")$Response
agr$CIHigh = aggregate(Response ~ prosody, data=cd, FUN="ci.high")$Response
agr$YMin = agr$Response - agr$CILow
agr$YMax = agr$Response + agr$CIHigh
dodge = position_dodge(.9)
#agr$Choice = factor(x=agr$AIness,levels=c("SAI","VPAI"))
agr
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show_guide=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60",width = 1, height = 0) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
#geom_line(data=mean.by.worker,aes(y=Mean,group=workerid))
#theme(axis.text=element_text(size=16), axis.title=element_text(size=22))+
xlab("Prosody") +
ylab("Mean certainty rating") +
scale_y_discrete(breaks=seq(1,7))
ggsave(f="graphs/bar-plot-mean-response.pdf",height=3,width=3)
mean.by.worker <- cd %>%
dplyr::select(workerid,Response,prosody) %>%
group_by(workerid,prosody) %>%
summarise(Mean = mean(Response))
mean.by.worker
mean.by.worker$prosody2 <- factor(mean.by.worker$prosody, c("LH-Cont-CC","H-Pred"))
ggplot(mean.by.worker, aes(x=Mean,y=workerid,colour=prosody,fill=prosody)) +
geom_point() +
xlim(0,7) +
geom_text(aes(label=round(Mean,1)),hjust=0, vjust=0) +
geom_line()
ggsave("graphs/means-by-worker.pdf",height=10,width=12)
mean.by.worker <- cd %>%
dplyr::select(workerid,Response,prosody) %>%
group_by(workerid,prosody) %>%
summarise(Mean = mean(Response))
mean.by.worker
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show_guide=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60",width = 1, height = 0) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
#geom_line(data=mean.by.worker,aes(y=Mean,group=workerid))
#theme(axis.text=element_text(size=16), axis.title=element_text(size=22))+
xlab("Prosody") +
ylab("Mean certainty rating") +
scale_y_discrete(breaks=seq(1,7))
ggsave(f="graphs/bar-plot-mean-response.pdf",height=3,width=3)
library(grid)
library(ggplot2)
names(cd)
cd$Response <- as.numeric(cd$Response)
agr = aggregate(Response ~ prosody, data=cd, FUN="mean")
agr$CILow = aggregate(Response ~ prosody, data=cd, FUN="ci.low")$Response
agr$CIHigh = aggregate(Response ~ prosody, data=cd, FUN="ci.high")$Response
agr$YMin = agr$Response - agr$CILow
agr$YMax = agr$Response + agr$CIHigh
dodge = position_dodge(.9)
#agr$Choice = factor(x=agr$AIness,levels=c("SAI","VPAI"))
agr
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show_guide=F,position=dodge)
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show.legend=F,position=dodge)
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show.legend=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60",width = 1, height = 0)
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show.legend=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60")
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show.legend=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
#geom_line(data=mean.by.worker,aes(y=Mean,group=workerid))
#theme(axis.text=element_text(size=16), axis.title=element_text(size=22))+
xlab("Prosody") +
ylab("Mean certainty rating") +
scale_y_discrete(breaks=seq(1,7))
ggsave(f="graphs/bar-plot-mean-response.pdf",height=3,width=3)
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show.legend=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
#scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
#geom_line(data=mean.by.worker,aes(y=Mean,group=workerid))
#theme(axis.text=element_text(size=16), axis.title=element_text(size=22))+
xlab("Condition") +
ylab("Mean certainty rating") +
scale_y_discrete(breaks=seq(1,7))
ggsave(f="graphs/bar-plot-mean-response.pdf",height=3,width=3)
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show.legend=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
#scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
#geom_line(data=mean.by.worker,aes(y=Mean,group=workerid))
#theme(axis.text=element_text(size=16), axis.title=element_text(size=22))+
xlab("Condition") +
ylab("Mean certainty rating")
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show.legend=F,position=dodge) +
geom_point(data=mean.by.worker, aes(y=Mean), color="grey60") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
#scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
#geom_line(data=mean.by.worker,aes(y=Mean,group=workerid))
#theme(axis.text=element_text(size=16), axis.title=element_text(size=22))+
xlab("Condition") +
ylab("Mean certainty rating")
#scale_y_discrete(breaks=seq(1,7))
ggsave(f="graphs/bar-plot-mean-response.pdf",height=3,width=5)
d$Response <- as.numeric(d$Response)
agr = aggregate(Response ~ prosody+utterance, data=d, FUN="mean")
agr$CILow = aggregate(Response ~ prosody+utterance, data=d, FUN="ci.low")$Response
agr$CIHigh = aggregate(Response ~ prosody+utterance, data=d, FUN="ci.high")$Response
agr$YMin = agr$Response - agr$CILow
agr$YMax = agr$Response + agr$CIHigh
dodge = position_dodge(.9)
agr
d$Response <- as.numeric(d$Response)
agr = aggregate(Response ~ prosody+utterance, data=d, FUN="mean")
agr$CILow = aggregate(Response ~ prosody+utterance, data=d, FUN="ci.low")$Response
agr$CIHigh = aggregate(Response ~ prosody+utterance, data=d, FUN="ci.high")$Response
agr$YMin = agr$Response - agr$CILow
agr$YMax = agr$Response + agr$CIHigh
dodge = position_dodge(.9)
agr
# plot
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show_guide=F,position=dodge) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
facet_wrap(~utterance) +
xlab("Prosody") +
ylab("Mean certainty rating") +
scale_y_discrete(breaks=seq(1,7))
ggsave(f="graphs/bar-plot-mean-response-by-utterance.pdf",height=8,width=14)
ggplot(agr, aes(x=prosody,y=Response),xpd=FALSE) +
geom_bar(stat="identity",position=dodge) +
geom_bar(stat="identity",fill="white",color="black",show_guide=F,position=dodge) +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.25,position=dodge) +
scale_x_discrete(breaks=c("H-Pred", "LH-Cont-CC"), labels=c("H* on predicate", "L+H* on content")) +
facet_wrap(~utterance) +
xlab("Prosody") +
ylab("Mean certainty rating")
#scale_y_discrete(breaks=seq(1,7))
ggsave(f="graphs/bar-plot-mean-response-by-utterance.pdf",height=8,width=14)
model.full <- clmm(Response ~ prosody + (1+prosody|workerid) + (1+prosody|utterance), data=cd)
summary(model.full)
cd$Response <- as.factor(cd$Response)
str(cd$Response)
model.full <- clmm(Response ~ prosody + (1+prosody|workerid) + (1+prosody|utterance), data=cd)
summary(model.full)
table(cd$prosody)
cd$prosody <- factor(cd$prosody, levels = c("LHname","LHadv","fillerNo","fillerYes"))
cd$Response <- as.factor(cd$Response)
str(cd$Response)
model.full <- clmm(Response ~ prosody + (1+prosody|workerid) + (1+prosody|utterance), data=cd)
summary(model.full)
theme_set(theme_bw())
setwd('/Users/judith/Documents/current-research-topics/NSF-NAI/prop-att-experiments/1factive-verbs/4-ProjAI/results')
source('rscripts/helpers.R')
library(plyr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(languageR)
library(lme4)
require(foreign)
require(ggplot2)
require(MASS)
require(Hmisc)
require(reshape2)
library(ucminf)
library(scales)
d = read.csv("../run-AMT-experiment/experiment.csv")
nrow(d) #7500 (250 Turkers x 30 responses)
names(d)
head(d)
summary(d)
d_real$workerid <- match(d_real$workerid, unique(sort(d_real$workerid)))
d_real = read.csv("../run-AMT-experiment/experiment.csv")
nrow(d_real) #7500 (250 Turkers x 30 responses)
names(d_real)
head(d_real)
summary(d_real)
d_real$workerid <- match(d_real$workerid, unique(sort(d_real$workerid)))
d <- d_real
saveRDS(d, file="data/d.rds")
head(d)
names(d_real)
saveRDS(d, file="data/d.rds")
head(d)
d = readRDS(d, file="data/d.rds")
# look at Turkers' comments
unique(d$comments)
table(d$question_type,d$response)
d[d$question_type == "ai",]$response = 1 - d[d$question_type == "ai",]$response
unique(d$slide_number_in_experiment) #slide numbers from 4 to 34 (3 instructions at beginning, 19 missing because another instruction)
d$trial = d$slide_number_in_experiment - 3
unique(d$trial) # trial numbers from 1 to 31 (16 missing because instruction)
d[d$trial > 15,]$trial = d[d$trial > 15,]$trial - 1
unique(d$trial) # trials from 1 to 30
length(unique(d$workerid)) #250 (250 Turkers participated)
length(which(is.na(d$language))) #no missing responses
table(d$language)
# american english   American English   Chinese, English             Creole
# 30                 30                 30                 30
# Elish            emglish            Eng;osj            Engligh
# 30                 30                 30                 30
# english            English            ENGLISH           english
# 1950               4740                150                 30
# English           ENGLISH              Englush            Enlgish
# 60                 30                 30                 30
# ENLGISH             french German and English            Russian
# 30                 30                 30                 30
# Spanish               Thai         vietnamese
# 60                 30                 30
d <- subset(d, (d$language != "french" & d$language != "Russian" & d$language != "Creole" &
d$language != "Spanish" & d$language != "Thai" & d$language != "vietnamese"))
d = droplevels(d)
length(unique(d$workerid)) #243 (data from 7 Turker excluded, 243 remaining Turkers)
# exclude non-American English speakers
length(unique(d$workerid))#243
length(which(is.na(d$ame))) #0 (everybody responded)
table(d$ame)
# No  Yes
# 660 6630
d <- subset(d, d$ame == "Yes")
d = droplevels(d)
length(unique(d$workerid))
names(d)
d.MC <- subset(d, d$short_trigger == "MC")
d.MC <- droplevels(d.MC)
nrow(d.MC) #2652 (221 Turkers x 6 MCs x 2 questions)
# projection of main clause data
table(d$question_type)
d.MC.Proj <- subset(d.MC, d.MC$question_type == "projective")
d.MC.Proj <- droplevels(d.MC.Proj)
nrow(d.MC.Proj)
round(mean(d.MC.Proj$response),2)
# calculate each Turkers mean response to the projection of main clauses
p.means = aggregate(response~workerid, data=d.MC.Proj, FUN="mean")
p.means$YMin = p.means$response - aggregate(response~workerid, data=d.MC.Proj, FUN="ci.low")$response
p.means$YMax = p.means$response + aggregate(response~workerid, data=d.MC.Proj, FUN="ci.high")$response
p.means
table(d$workerid)
